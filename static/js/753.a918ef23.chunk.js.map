{"version":3,"file":"static/js/753.a918ef23.chunk.js","mappings":"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","sources":["components/cards/songs-card.js","components/cards/barnner-card.js","pages/artiste-details-page/services.js","pages/artiste-details-page/artiste-details.helpers.js","components/cards/album-card.js","pages/artiste-details-page/artiste-details-page.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-return-assign */\r\nimport React from \"react\";\r\nimport { useWindowResize } from \"../../helpers/useWindowResize\";\r\n\r\nfunction SongsCard({ artisteTopSongs }) {\r\n  const { width } = useWindowResize();\r\n\r\n  /** Format Seconds to M:SS */\r\n  function FomartSecondsToMinutes(seconds) {\r\n    return (\r\n      (seconds - (seconds %= 60)) / 60 + (seconds > 9 ? \":\" : \":0\") + seconds\r\n    );\r\n  }\r\n\r\n  /** Display Fetched Top Songs Desktop */\r\n  const displayFetchedTopSongsDesktop = () => {\r\n    return artisteTopSongs?.map((fetchedTopSongs) => (\r\n      <div\r\n        title={fetchedTopSongs.title}\r\n        key={fetchedTopSongs.id}\r\n        className=\"h-full px-4 mt-2 flex items-center justify-between cursor-pointer rounded-lg text-deezer-font-white hover:text-deezer-font-black  border-black border-b bg-deezer-orange hover:bg-white\"\r\n      >\r\n        <p className=\"font-MabryProMedium text-base\">\r\n          {fetchedTopSongs.title.length <= 18 ? (\r\n            <span>{fetchedTopSongs.title}</span>\r\n          ) : (\r\n            <span>{fetchedTopSongs.title.slice(0, 18)}...</span>\r\n          )}\r\n        </p>\r\n        <p className=\"font-MabryProMedium text-base\">\r\n          {FomartSecondsToMinutes(fetchedTopSongs.duration)}\r\n        </p>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  /** Display Fetched Top Songs Mobile */\r\n  const displayFetchedTopSongsMobile = () => {\r\n    return artisteTopSongs?.map((fetchedTopSongs) => (\r\n      <div\r\n        title={fetchedTopSongs.title}\r\n        key={fetchedTopSongs.id}\r\n        className=\"h-full px-4 mt-2 flex items-center justify-between cursor-pointer rounded-lg text-deezer-font-white hover:text-deezer-font-black  border-black border-b bg-deezer-orange hover:bg-white\"\r\n      >\r\n        <p className=\"font-MabryProMedium text-base\">\r\n          {fetchedTopSongs.title.length <= 25 ? (\r\n            <span>{fetchedTopSongs.title}</span>\r\n          ) : (\r\n            <span>{fetchedTopSongs.title.slice(0, 25)}...</span>\r\n          )}\r\n        </p>\r\n        <p className=\"font-MabryProMedium text-base\">\r\n          {FomartSecondsToMinutes(fetchedTopSongs.duration)}\r\n        </p>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {width > 1060 ? (\r\n        <div className=\"h-[500px] flex flex-col justify-evenly border border-black rounded-r-lg px-4 py-6\">\r\n          <p className=\"font-MabryProBold mb-4 text-deezer-font-black text-4xl\">\r\n            Top Songs\r\n          </p>\r\n          {displayFetchedTopSongsDesktop()}\r\n        </div>\r\n      ) : (\r\n        <div className=\"h-[500px] mt-12 flex flex-col justify-evenly border border-black rounded-lg px-4 py-6\">\r\n          <p className=\"font-MabryProBold mb-4 text-deezer-font-black text-3xl\">\r\n            Top Songs\r\n          </p>\r\n          {displayFetchedTopSongsMobile()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongsCard;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useWindowResize } from \"../../helpers/useWindowResize\";\r\n\r\nfunction BarnnerCard({ artisteDetails }) {\r\n  const params = useParams();\r\n  const { artisteName } = params;\r\n  const { width } = useWindowResize();\r\n\r\n  // Number Formatter\r\n  function NumberFormatter(num) {\r\n    if (num >= 1000000000) {\r\n      return `${(num / 1000000000).toFixed(1).replace(/\\.0$/, \"\")}G`;\r\n    }\r\n    if (num >= 1000000) {\r\n      return `${(num / 1000000).toFixed(1).replace(/\\.0$/, \"\")}M`;\r\n    }\r\n    if (num >= 1000) {\r\n      return `${(num / 1000).toFixed(1).replace(/\\.0$/, \"\")}K`;\r\n    }\r\n    return num;\r\n  }\r\n\r\n  /** Banner Card Desktop Reusable Component */\r\n  function BannerCardDesktop() {\r\n    return (\r\n      <div className=\" overflow-hidden relative\">\r\n        <div className=\"z-10 absolute mt-12 ml-12\">\r\n          <div>\r\n            <h1 className=\"font-MabryProBold text-deezer-font-white text-8xl shadow-deezer-orange text-stroke\">\r\n              {artisteName}\r\n            </h1>\r\n            <h3 className=\"font-MabryProMedium text-deezer-font-white text-4xl shadow-deezer-orange text-stroke\">\r\n              {NumberFormatter(artisteDetails.nb_fan)} Fans\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <img\r\n          src={artisteDetails.picture_xl}\r\n          alt={artisteName}\r\n          className=\"object-cover w-full h-[500px] rounded-l-lg\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /** Banner Card Mobile Reusable Component */\r\n  function BannerCardMobile() {\r\n    return (\r\n      <div className=\"overflow-hidden relative\">\r\n        <div className=\"z-10 absolute bottom-10 ml-6\">\r\n          <div>\r\n            <h1 className=\"font-MabryProBold text-deezer-font-white text-4xl md:text-6xl lg:text-8xl text-stroke \">\r\n              {artisteName}\r\n            </h1>\r\n            <h3 className=\"font-MabryProMedium text-deezer-font-white text-2xl md:text-2xl lg:text-4xl text-stroke \">\r\n              {NumberFormatter(artisteDetails.nb_fan)} Fans\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <img\r\n          src={artisteDetails.picture_xl}\r\n          alt={artisteName}\r\n          className=\"object-cover w-full h-[500px] rounded-lg\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>{width > 1060 ? <BannerCardDesktop /> : <BannerCardMobile />}</div>\r\n  );\r\n}\r\n\r\nexport default BarnnerCard;\r\n","import { deezerApi } from \"../../utils/config\";\r\n\r\nexport default {\r\n  /** Send a Get request to Get Artiste Details */\r\n  async GetArtisteDetails(artisteId) {\r\n    return deezerApi.get(`artist/${artisteId}`);\r\n  },\r\n\r\n  /** Send a Get request to Get Artiste Top Songs */\r\n  async GetTopSongs(artisteId) {\r\n    return deezerApi.get(`artist/${artisteId}/top`);\r\n  },\r\n\r\n  /** Send a Get request to Get Artiste Albums */\r\n  async GetAlbums(artisteId) {\r\n    return deezerApi.get(`artist/${artisteId}/albums`);\r\n  },\r\n};\r\n","import services from \"./services\";\r\n\r\n/** Handles Get Artiste's Top Details */\r\nexport const getArtistesDetails = async (setArtisteDetails, artisteId) => {\r\n  await services\r\n    .GetArtisteDetails(artisteId)\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        setArtisteDetails(response.data);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      if (error) {\r\n        // console.error(\"GetArtisteDetails ERROR\", error);\r\n      }\r\n    });\r\n};\r\n\r\n/** Handles Get Artiste's Top Songs */\r\nexport const getArtistesTopSongs = async (setArtisteTopSongs, artisteId) => {\r\n  await services\r\n    .GetTopSongs(artisteId)\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        setArtisteTopSongs(response.data.data);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      if (error) {\r\n        // console.error(\"GetTopSongs ERROR\", error);\r\n      }\r\n    });\r\n};\r\n\r\n/** Handles Get Artiste's Albums */\r\nexport const getArtistesAlbums = async (setArtisteAlbums, artisteId) => {\r\n  await services\r\n    .GetAlbums(artisteId)\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        setArtisteAlbums(response.data.data);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      if (error) {\r\n        // console.error(\"GetTopSongs ERROR\", error);\r\n      }\r\n    });\r\n};\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport React from \"react\";\r\nimport { useWindowResize } from \"../../helpers/useWindowResize\";\r\n\r\nfunction AlbumCard({ fetchedAlbum }) {\r\n  const { width } = useWindowResize();\r\n\r\n  function SplitDate(date) {\r\n    const year = date.split(\"-\");\r\n    return year[0];\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {width > 1060 ? (\r\n        <div title={fetchedAlbum.title} className=\"cursor-pointer   \">\r\n          <img\r\n            src={fetchedAlbum.cover_medium}\r\n            alt={fetchedAlbum.title}\r\n            className=\"object-cover rounded-lg\r\n            h-[300px] w-[300px] hover:h-[310px] hover:w-[310px] hover:shadow-lg transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-10 duration-300\"\r\n          />\r\n          <p className=\"font-MabryProBold mt-4 text-deezer-font-black text-xl\">\r\n            {fetchedAlbum.title.length <= 25 ? (\r\n              <span>{fetchedAlbum.title}</span>\r\n            ) : (\r\n              <span>{fetchedAlbum.title.slice(0, 25)}...</span>\r\n            )}\r\n          </p>\r\n          <p className=\"font-MabryProMedium text-deezer-font-black text-lg\">\r\n            {SplitDate(fetchedAlbum.release_date)}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div title={fetchedAlbum.title} className=\"cursor-pointer  \">\r\n          <img\r\n            src={fetchedAlbum.cover_medium}\r\n            alt={fetchedAlbum.title}\r\n            className=\"object-cover rounded-lg\r\n              h-[300px] w-[300px] hover:h-[310px] hover:w-[310px] hover:shadow-lg transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-10 duration-300 \"\r\n          />\r\n          <p className=\"font-MabryProBold mt-2 text-deezer-font-black text-xl\">\r\n            {fetchedAlbum.title.length <= 25 ? (\r\n              <span>{fetchedAlbum.title}</span>\r\n            ) : (\r\n              <span>{fetchedAlbum.title.slice(0, 25)}...</span>\r\n            )}\r\n          </p>\r\n          <p className=\"font-MabryProMedium text-deezer-font-black text-lg\">\r\n            {SplitDate(fetchedAlbum.release_date)}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlbumCard;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SongsCard from \"../../components/cards/songs-card\";\r\nimport BarnnerCard from \"../../components/cards/barnner-card\";\r\nimport Header from \"../../components/header/header\";\r\nimport { useWindowResize } from \"../../helpers/useWindowResize\";\r\nimport {\r\n  getArtistesAlbums,\r\n  getArtistesDetails,\r\n  getArtistesTopSongs,\r\n} from \"./artiste-details.helpers\";\r\nimport AlbumCard from \"../../components/cards/album-card\";\r\n\r\nfunction ArtisteDetailsPage() {\r\n  const params = useParams();\r\n  const { artisteName } = params;\r\n  const { artisteId } = params;\r\n  const { width } = useWindowResize();\r\n  const [artisteDetails, setArtisteDetails] = useState([]);\r\n  const [artisteTopSongs, setArtisteTopSongs] = useState([]);\r\n  const [artisteAlbums, setArtisteAlbums] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n\r\n    document.title = \"Deezer • Artiste Details\";\r\n\r\n    getArtistesDetails(setArtisteDetails, artisteId);\r\n    getArtistesTopSongs(setArtisteTopSongs, artisteId);\r\n    getArtistesAlbums(setArtisteAlbums, artisteId);\r\n\r\n    return function cleanup() {\r\n      ac.abort();\r\n    };\r\n  }, []);\r\n\r\n  /** Display Fetched Album Cards */\r\n  const displayFetchedAlbumCards = () => {\r\n    return artisteAlbums?.map((fetchedAlbum) => (\r\n      <div key={fetchedAlbum.id}>\r\n        <AlbumCard fetchedAlbum={fetchedAlbum} />\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <section className=\"w-full px-[16px] md:px-[60px] lg:px-[60px]\">\r\n        <div className={`${width > 1060 && \"lg:flex\"} items-center`}>\r\n          <div className={`${width < 1060 ? \"w-full\" : \"lg:w-4/5\"}`}>\r\n            <BarnnerCard artisteDetails={artisteDetails} />\r\n          </div>\r\n          <div className={`${width < 1060 ? \"w-full\" : \"lg:w-1/5 lg:mt-0\"}`}>\r\n            <SongsCard artisteTopSongs={artisteTopSongs} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-10\">\r\n          <p className=\"font-MabryProBold mb-4 text-deezer-font-black text-4xl\">\r\n            Albums\r\n          </p>\r\n          <div className=\"grid gap-8 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 w-full place-items-center mb-10 mt-6\">\r\n            {displayFetchedAlbumCards()}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtisteDetailsPage;\r\n"],"names":["_ref","artisteTopSongs","width","useWindowResize","FomartSecondsToMinutes","seconds","_jsx","children","_jsxs","className","map","fetchedTopSongs","title","length","slice","duration","id","artisteDetails","artisteName","useParams","NumberFormatter","num","concat","toFixed","replace","BannerCardDesktop","nb_fan","src","picture_xl","alt","BannerCardMobile","artisteId","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","deezerApi","get","stop","_callee2","_context2","_callee3","_context3","getArtistesDetails","setArtisteDetails","services","then","response","status","data","catch","error","_x","_x2","apply","arguments","getArtistesTopSongs","_ref2","setArtisteTopSongs","_x3","_x4","getArtistesAlbums","_ref3","setArtisteAlbums","_x5","_x6","fetchedAlbum","SplitDate","date","split","cover_medium","release_date","params","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","artisteAlbums","useEffect","ac","AbortController","document","abort","Header","BarnnerCard","SongsCard","AlbumCard"],"sourceRoot":""}